[
    {
        "file": "portfolio",
        "name": "Portfolio Website",
        "body": "I finally updated my portfolio website with a list of projects. Currently, it's a static website. The content for each project's page is stored in JSON, and the pages are generated using Python and Jinja.",
        "links": [
            {
                "url": "https://github.com/musahaydar/Portfolio",
                "text": "view source code on GitHub"
            }
        ],
        "icon_names": [
            "website",
            "python"
        ]
    },
    {
        "file": "ex_animo",
        "name": "Ex Animo",
        "body": "Ex Animo is a selection of songs I created when I was learning how to compose music. Some of the tracks date back as early as 2017. Of course, I cleaned them quite up a bit, but you can tell I had a minimal understanding of music theory at the time. Most of the songs were created in FL Studio, but a few were made in LMMS.",
        "links": [
            {
                "url": "https://musahaydar.bandcamp.com/album/ex-animo",
                "text": "listen on Bandcamp"
            }
        ],
        "icon_names": [
            "music",
            "fl-studio",
            "lmms"
        ]
    },
    {
        "file": "crowds",
        "name": "Crowds!",
        "body": "Crowds! is a puzzle game about getting people indoors. It was made for the 2021 WolverineSoft Summer Game Jam, where the theme was \"You don't have to go home, but you can't stay here.\" I created the music, artwork, and programmed the game, and Logan Hughes created all of the game's sound effects. Crowds! won first place.</p><p>Crowds! is played by placing \"impostors\" on the board, which affect the people around them. The goal is to get all the people off the board in as few turns and using as few impostors as possible.</p><p>The game is more of a proof of concept, since I didn't implement a way to share a puzzle so that more than one person can try to optimize a solution. The rules are also rather complicated, and a proper tutorial would help.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/crowds",
                "text": "download the game on Itch.io"
            },
            {
                "url": "https://github.com/musahaydar/crowds",
                "text": "view source code on GitHub"
            },
            {
                "url": "https://logan-hughes.com/",
                "text": "check out Logan Hughes' work"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "witchtale_soundtrack",
        "name": "Witchtale Soundtrack",
        "body": "As part of the video game music course at UMich, I had the opportunity to compose music for a team in EECS 494, the game development course. I worked with the team creating Witchtale, a retro-inspired platformer game. To match the aesthetic, I composed four tracks of chiptune-inspired music.",
        "links": [
            {
                "url": "https://musahaydar.bandcamp.com/album/witchtale-soundtrack",
                "text": "listen on Bandcamp"
            },
            {
                "url": "https://pentaclestudio.itch.io/witchtale",
                "text":"download Witchtale on Itch.io"
            }
        ],
        "icon_names": [
            "music",
            "soundtrack",
            "fl-studio"
        ]
    },
    {
        "file": "false_alarm",
        "name": "False Alarm",
        "body": "False alarm was created by a team of nine in 48 hours for the WolverineSoft 2021 Shammy Game Jam. The theme was \"What could go wrong?\" and my role for this game was programming. I worked on implementing some of the puzzle's mechanics and their user interfaces. False Alarm won first place.",
        "links": [
            {
                "url": "https://kapitha.itch.io/false-alarm",
                "text":"download the game on Itch.io"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "homelost",
        "name": "Homelost",
        "body": "Homelost is a twin-stick shooter game created for the 2021 Global Game Jam. The game was created in 48 hours, and the theme was \"Lost & Found.\" With Homelost, my focus was on the game feel and the enemies' animations.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/homelost",
                "text": "download the game on Itch.io"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "demo_2020",
        "name": "Demo 2020",
        "body": "Demo 2020 is a demo album containing some of my favorite compositions from the year.",
        "links": [
            {
                "url": "https://musahaydar.bandcamp.com/album/demo-2020",
                "text": "listen on Bandcamp"
            }
        ],
        "icon_names": [
            "music",
            "fl-studio"
        ]
    },
    {
        "file": "ad_astra",
        "name": "Ad Astra",
        "body": "Ad Astra is an EP I made during a 48-hour WolverineSoft game jam, when I wanted to take a break from programming after a long class project. The jam's theme was \"Momentum.\" My goal was to capture the bitter-sweetness of departure and the grandiosity of flying through outer space.",
        "links": [
            {
                "url": "https://musahaydar.bandcamp.com/album/ad-astra",
                "text": "listen on Bandcamp"
            }
        ],
        "icon_names": [
            "music",
            "jam",
            "fl-studio"
        ]
    },
    {
        "file": "lunar_respite",
        "name": "Lunar Respite",
        "body": "Lunar Respite is moon survival game I created in a week for the WolverineSoft 2020 August Game Jam. The theme was \"One Controls Two\", which is where the idea of controlling two separated astronauts originated. Lunar Respite was awarded first place.</p><p>Lunar respite is one of my proudest game jam achievements. In addition to all the game's artwork, audio, and music, I managed to implement so many systems that week. This includes an inventory system, a system to persist items in the world and in storage inventories across Unity scenes, various interactive components, player status systems, and so on. I got way too little sleep that week, and it was totally worth it.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/lunar-respite",
                "text": "download the game on Itch.io"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "be_happy_pico_8",
        "name": "Be Happy (Pico 8 ver.)",
        "body": "I wanted to try developing for the PICO-8 fantasy console, so I spent a weekend recreating my game, Be Happy, in it.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/be-happy-pico-8",
                "text":"download the game on Itch.io"
            }
        ],
        "icon_names": [
            "game",
            "pico-8",
            "lua"
        ]
    },
    {
        "file": "be_happy",
        "name": "Be Happy",
        "body": "Be Happy is a pair of arcade-style games created for the WolverineSoft 2020 June Game Jam. The theme was \"Zoom.\" I had an idea for the first game to fit the theme, but a tile-matching puzzle game was what I really wanted to make. Since I had a week for the jam, I ended up making both. I think the second game turned out to be a lot of fun! Be Happy was awarded first place.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/be-happy",
                "text":"download the game on Itch.io"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "awake_and_away",
        "name": "Awake & Away",
        "body": "Awake & Away is a very short role-playing game developed for the WolverineSoft 2020 Shammy Game Jam. It was developed in 48 hours and awarded third place.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/awake-and-away",
                "text": "download the game on Itch.io"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "the_broken_mansion",
        "name": "The Broken Mansion",
        "body": "The Broken Mansion is an exploration puzzle game created in 48 hours for the 2020 Global Game Jam. It's one of my favorite games I've made so far.</p><p>I had created the 3D style a short while before the global game jam, and decided I wanted to try making something with it. I spent the first day of the jam implementing the billboarding sprites and edge detection systems. I came up with the compass system later in the jam, while walking to the site early in the morning. The result was an atmospheric exploration game that I'm very proud of.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/broken-mansion",
                "text": "download the game on Itch.io"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "grief",
        "name": "Grief",
        "body": "Grief is bullet-hell shooter game created for the WolverineSoft 2020 Turkey Game Jam. It was awarded second place. The theme was \"Start Small.\" I collaborated with Ahmed Khan for this project, who helped me design and implement the complex bullet patterns.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/grief",
                "text": "download the game on Itch.io"
            },
            {
                "url": "https://ahmedkkhan.github.io/",
                "text": "check out Ahmed Khan's work"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "the_other_side",
        "name": "The Other Side",
        "body": "The Other Side was created during my first game jam: the WolverineSoft 2020 Pumpkin Game Jam. I had experience programming role-playing game mechanics before this, and I wanted to see what I could make just 48 hours. The Other Side was awarded second place.",
        "links": [],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "auto_scheduler",
        "name": "Auto Scheduler",
        "body": "Auto Scheduler is a web application created as our final project in EECS 493: User Interface Development. It was created using React and Bootstrap. Our group consisted of three members.</p><p>Auto Scheduler allows a user to input a list of tasks they'd like to complete, and it automatically organizes and times them, inserting breaks and notifying the user when it's time to switch to the next task. Auto Scheduler also saves the user's state using their web browser's local storage.",
        "links": [
            {
                "url": "https://github.com/musahaydar/auto-schedule",
                "text": "view source code on GitHub"
            }
        ],
        "icon_names": [
            "website",
            "javascript",
            "react",
            "bootstrap"
        ]
    },
    {
        "file": "meteor_matrix",
        "name": "Meteor Matrix",
        "body": "Meteor Matrix was my first game ever completed and published. It was a small mobile game created in Unity where the player could tap either side of their screen to move a spaceship and avoid asteroids.</p><p>Meteor Matrix was developed in a couple months, and was published on both the Google Play Store and the iOS App Store. I also implemented a global high score system that saved the best score achieved globally on a server. I released an update for the game in May, 2016.",
        "links": [],
        "icon_names": [
            "game",
            "unity",
            "c-sharp",
            "android",
            "ios"
        ]
    },
    {
        "file": "magnetize",
        "name": "Magnetize",
        "body": "Magnetize was a follow up game to Meteor Matrix. It had similar controls, except now the player controls two magnets that attract or repel each other. Magnetize also featured a global high score system by connecting to a server, and was published on both the Google Play Store and the iOS App Store.",
        "links": [],
        "icon_names": [
            "game",
            "unity",
            "c-sharp",
            "android",
            "ios"
        ]
    },
    {
        "file": "rhythm_frontier",
        "name": "Rhythm Frontier",
        "body": "Rhythm Frontier is a game I created with Isaac Huffman for the WolverineSoft 2021 Pumpkin Game Jam. The theme was \"Deja Vu,\" so we created a rhythm game that incorporates pattern memorization. We won first place!</p><p>Rhythm Frontier was created in a custom game engine Isaac wrote using Java and LWJGL. My primary focus for this game was the artwork and music, but I also contributed to the code by adding graphics, levels, and sounds using Isaac's engine's abstractions.",
        "links": [
            {
                "url": "https://musahaydar.itch.io/rhythm-frontier",
                "text": "download the game on Itch.io"
            },
            {
                "url": "https://github.com/isaacph/DejaVuRhythmGame",
                "text": "view source code on GitHub"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "java"
        ]
    },
    {
        "file": "contactless",
        "name": "Contactless",
        "body": "Contactless is a mobile application developed by a team of three as our final project for EECS 441: Mobile App Development for Entrepreneurs. Contactless allows the user to enter their desired contact information and generate a QR code which is displayed on the landing page of the app. Then, when they'd like to share their contact information with another person, the other person can download their contact card by scanning that QR code with their phone. The focus of this course was more on the process of designing, iterating, and user testing than on actual app development. We created this app using React Native and published it onto the Google Play store.",
        "links": [
            {
                "url": "https://play.google.com/store/apps/details?id=com.contactless441",
                "text": "download it on the Google Play store"
            },
            {
                "url": "https://github.com/asaadat99/contactless",
                "text": "view source code on GitHub"
            }
        ],
        "icon_names": [
            "android",
            "javascript",
            "react-native"
        ]
    },
    {
        "file": "othersider",
        "name": "Othersider",
        "body": "A game created by Nicholas Way and me in 48 hours for the 2022 Global Game Jam, inspired by the theme \"Duality.\" Control one character across multiple levels simultaneously, carrying your momentum between worlds.",
        "links": [
            {
                "url": "https://eggshelld.itch.io/othersider",
                "text": "play or download the game on itch.io"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "how_to_say_goodbye",
        "name": "How To Say Goodbye",
        "body": "Nostalgic college town vibes.",
        "links": [
            {
                "url": "https://musahaydar.bandcamp.com/album/how-to-say-goodbye",
                "text": "listen on Bandcamp"
            },
            {
                "url": "https://musahaydar.bandcamp.com/album/ill-miss-you-snowy-duet-version",
                "text": "listen to the track I'll Miss You (Snowy Duet Version)"
            }
        ],
        "icon_names": [
            "music",
            "fl-studio"
        ]
    },
    {
        "file": "undergrad_anthology",
        "name": "Undergrad Anthology",
        "body": "Undergrad Anthology is a collection of the music I composed during my three years as an undergraduate at the University of Michigan. Most of the tracks either come from game jams or from image-prompt composition challenges which I participated in through the university's Video Game Music Club. There are also some tracks from various projects which I don't intent to finish.",
        "links": [
            {
                "url": "https://musahaydar.bandcamp.com/album/undergrad-anthology",
                "text": "listen on Bandcamp"
            }
        ],
        "icon_names": [
            "music",
            "fl-studio"
        ]
    },
    {
        "file": "short_songs",
        "name": "Short Songs",
        "body": "I created a lot of LMMS projects when I was learning to use it a few years ago, as one does. I happened upon them recently, and among them were some audio files that were only a few seconds long, with some small idea I did not elaborate on at the time. This \"EP\" is a compilation of some of them, totaling exactly a minute of sound.",
        "links": [
            {
                "url": "https://musahaydar.bandcamp.com/album/short-songs",
                "text": "listen on Bandcamp"
            }
        ],
        "icon_names": [
            "music",
            "lmms"
        ]
    },
    {
        "file": "spotify-playlist-to-csv",
        "name": "Spotify Playlist to CSV",
        "body": "Spotify Playlist to CSV is a small script I wrote to generate a CSV from a Spotify playlist via a list of URLs. It's written in JavaScript to take advantage of the Spotify-URL-Info NPM package.",
        "links": [
            {
                "url": "https://github.com/musahaydar/spotify-playlist-to-csv",
                "text": "view source code or download on GitHub"
            }
        ],
        "icon_names": [
            "command-line",
            "javascript"
        ]
    },
    {
        "file": "whatsapp-stats-parser",
        "name": "WhatsApp Stats Parser",
        "body": "While talking with a friend, a question arose of just how active a particular student organization group chat is in terms of unique active participants and number of messages, so I wrote a script to parse a WhatsApp chat export text file (using regular expressions) to determine the chat's activity within a week. It was further suggested to me to count messages per sender so we could rank participant activity in the chat. An additional feature to create a bar graph of the results was contributed to the project by another friend, GitHub user <span class=\"code_inline\">cmdshftateya</span>. This little project turned out to be a lot of fun!",
        "links": [
            {
                "url": "https://github.com/musahaydar/whatsapp-stats-parser",
                "text": "view source code or download on GitHub"
            },
            {
                "url": "https://github.com/cmdshftateya",
                "text": "check out <span class=\"code_inline\">cmdshftateya</span>'s work on GitHub"
            }
        ],
        "icon_names": [
            "command-line",
            "python"
        ]
    },
    {
        "file": "loop-fusion-mic",
        "name": "MIC for Loop Fusion in LLVM",
        "body": "My EECS 583 team's final project was an implementation of an algorithm to move intervening code between two loops so that the loops can be fused using the existing loop fusion pass in LLVM. Details of the problem and our solution can be found in our team's report.",
        "links": [
            {
                "url": "https://github.com/musahaydar/eecs583-loop-fusion",
                "text": "view source code or download on GitHub"
            },
            {
                "url": "https://musah.net/pdf/583_report.pdf",
                "text": "read our team's report"
            }
        ],
        "icon_names": [
            "command-line",
            "python"
        ]
    },
    {
        "file": "kompare",
        "name": "KOMPARE",
        "body": "As part of my master's degree in computer science, I wrote a master's thesis on KOMPARE, my work to extend the KLEE symbolic execution engine for patch verification. KOMPARE's analysis demonstrates that a patch to a program does not introduce any new bugs nor affect the program's behavior in any unintended ways. <p>KOMPARE symbolically executes a patched program to generate program inputs. Then, concrete executions are performed using the generated inputs on both the patched and original versions of the program. During these concrete executions, KOMPARE records and compares the externally visible outputs of the program to determine if the behaviors of the two versions match. KOMPARE additionally performs an analysis of differences between the two programs (as represented in LLVM bitcode), which is then used to direct symbolic execution towards the differences in the programs, increasing the efficiency of KOMPARE's analysis.</p>",
        "links": [
            {
                "url": "https://musah.net/pdf/thesis.pdf",
                "text": "read my master's thesis"
            },
            {
                "url": "https://github.com/musahaydar/klee-compare",
                "text": "view source code or download on GitHub"
            }
        ],
        "icon_names": [
            "c-plus-plus"
        ]
    },
    {
        "file": "star-crossed-rover",
        "name": "Star-Crossed Rover",
        "body": "<p>\"A tiny robot with a failing battery falls in love with the moon.\"</p><p>Star-Crossed Rover is a puzzle game created by Kaavya Ramachandhran and me for the WolverineSoft 2023 Beach Game Jam with the theme \"Speed\". We built the game within a week, and it was awarded first place! I also took this game jam as an opportunity to dive into the Godot game engine for the first time.</p>",
        "links": [
            {
                "url": "https://kapitha.itch.io/star-crossed-rover",
                "text": "play or download the game on Itch.io"
            },
            {
                "url": "https://musahaydar.bandcamp.com/album/star-crossed-rover-soundtrack",
                "text": "listen to the soundtrack on Bandcamp"
            },
            {
                "url": "https://musah.net/posts/godot-has-arrived.html",
                "text": "read about my experience with Godot"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "godot",
            "gdscript"
        ]
    },
    {
        "file": "music-from-a-prototype",
        "name": "Music From a Prototype (2019)",
        "body": "Here is a collection of atmospheric songs from a prototype of a game I made back in 2019.",
        "links": [
            {
                "url": "https://musahaydar.bandcamp.com/album/music-from-a-prototype-2019",
                "text": "listen on Bandcamp"
            }
        ],
        "icon_names": [
            "music",
            "fl-studio",
            "lmms"
        ]
    },
    {
        "file": "the-ballroom-problem",
        "name": "The Ballroom Problem",
        "body": "<p>The Ballroom Problem is a two-player game where each player must find themselves, find the other player, and then murder them in a dark ballroom before they are caught. It was created for the 2023 WolverineSoft Mega Jam by Nicholas Way, Jacob Robinson, and I. We additionally incorporated some art assets from Szadi Art for the background. We won first place!</p><p>The Ballroom Problem turned out to be a lot of fun to play! Each player controls a dancer and a light, which they move independently. Since all the dancers (except the two player-controlled dancers) arrange themselves in the room in a synchronized dance, each player must try to blend in with the dancers by timing their movements, especially when a light is upon them.</p><p>The game works best with two controllers, and at least one is required. If only one controller is available, the other player may use Keyboard controls instead.</p>",
        "links": [
            {
                "url": "https://eggshelld.itch.io/ballroom-problem",
                "text": "download the game on Itch.io"
            }
        ],
        "icon_names": [
            "game",
            "jam",
            "unity",
            "c-sharp"
        ]
    },
    {
        "file": "spotify-data-exporter",
        "name": "Spotify Data Exporter",
        "body": "<p>In the event that Spotify becomes unavailable, or more generally that some content should be removed, I wanted a way to export my metadata (saved albums, playlist tracks, etc) so that information remains available to me. To do this, I wrote a Python script which connects to the Spotify API using the <a href=\"https://spotipy.readthedocs.io/\">Spotipy</a> library.</p><p>Unlike my previous Spotify exporting script, Spotipy allows you to authenticate a user by logging in via a web browser. This requires you to set up an application via Spotify's developer portal if you wish to use the app, but it then allows you to export private user data.</p><p>The main features I wanted and built into this script is a method to export a list of my saved albums into a CSV format, as well as a way to export playlists. Since the API can only fetch public playlists for a user, and not all saved playlists, I implemented a feature to use playlist URLs listed in a file. When this script exports a playlist, it creates a folder for the playlist, saving the playlist's image, the track list into a CSV file, as well as writing the original playlist name into a text file (in case it contained special characters so the folder could not be named after the playlist). There are some other neat features in the works as well.</p>",
        "links": [
            {
                "url": "https://github.com/musahaydar/Spotify-Data-Exporter",
                "text": "view source code or download on GitHub"
            }
        ],
        "icon_names": [
            "command-line",
            "python"
        ]
    }
]